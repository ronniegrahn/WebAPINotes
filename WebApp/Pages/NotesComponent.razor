@page "/projects/{projectId:int}/notes"

@inject INotesScreenUseCases NotesScreenUseCases

<h3>Notes</h3>
<br />

<div class="row">
    <div class="col-auto">
        <input type="text" class="form-control" @bind-value="searchFilter" />
    </div>
    <div class="col-auto">
        <button class="btn btn-light" @onclick="OnSearch">Search</button>
    </div>
</div>

<br />

@if (notes != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Owner</th>
                <th>Create Date</th>
                <th>Due Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var note in notes)
            {
                <NoteRowComponent Note="note"></NoteRowComponent>
            }
        </tbody>
    </table>


}

@code {

    IEnumerable<Note> notes;
    string searchFilter;

    [Parameter]
    public int ProjectId { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        notes = await NotesScreenUseCases.ViewNotes(ProjectId);
    }

    private async Task OnSearch()
    {
        notes = await NotesScreenUseCases.SearchNotes(searchFilter);
    }
}
